@using FailTracker.Web.Models.Helpers
@model IssueGridViewModel
<script type="text/javascript">
	$(function () {
		$(".issue-grid tbody").sortable({
			handle: ".drag-handle",
			helper: function (e, row) {
				var originals = row.children();
				var helper = row.clone();
				helper.children().each(function (index) {
					$(this).width(originals.eq(index).width())
				});

				return helper;
			},
			update: function (e, ui) {
				var moved = $(ui.item);
				var next = moved.next();

				//TODO: Post the IDs to the server!
				
			}
		});
	})
</script>
<table class="issue-grid">
	<thead>
		<tr>
			<th>&nbsp;</th>
			<th>Type</th>
			<th>Title</th>
			<th>Size</th>
			<th>Assigned To</th>
			<th>&nbsp;</th>
		</tr>
	</thead>
	<tbody>
		@foreach (var issue in Model.Issues)
		{
			<tr data-issue-id="@issue.ID">
				<td>
					@if (Model.AllowReordering)
					{
						<span class="drag-handle button ui-icon ui-icon-arrow-4"></span>
					}
					@(Html.Tag().ButtonTo<IssuesController>(c => c.Details(issue.ID), Icon.Search).AddClass("preview"))
				</td>
				<td>@issue.Type</td>
				<td>@(Html.ActionLink<IssuesController>(c => c.View(issue.ID), issue.Title))</td>
				<td>@issue.Size</td>
				<td>@Html.DisplayFor(m => issue.AssignedTo)</td>
				<td><span class="ui-icon ui-icon-trash issue-delete button" data-issue-id="@issue.ID"></span></td>
			</tr>
		}
	</tbody>
</table>
