@using FailTracker.Web.Models.Dashboard
@model ProjectDashboardViewModel
		   
<h3>Recent changes in @Model.Name</h3>
<table>
	<thead>
		<tr>
			<th>&nbsp;</th>
			<th>Type</th>
			<th>Title</th>
			<th>Size</th>
			<th>Assigned To</th>
			<th>&nbsp;</th>
		</tr>
	</thead>
	<tbody>
		@foreach(var issue in Model.ActiveIssues){
		<tr>
			<td><span class="ui-icon ui-icon-search issue-preview button" data-issue-id="@issue.ID"></span></td>
			<td>@issue.Type</td>
			<td>@(Html.ActionLink<IssuesController>(c => c.View(issue.ID), issue.Title))</td>
			<td>@issue.Size</td>
			<td>@Html.DisplayFor(m => issue.AssignedTo)</td>
			<td><span class="ui-icon ui-icon-trash issue-delete button" data-issue-id="@issue.ID"></span></td>
		</tr>
		}
	</tbody>
</table>
<p>
	@(Html.Tag().LinkTo<AddIssueController>(c => c.Index(Model.ID), "View Backlog").AsButton(Icon.FolderOpen))
	@(Html.Tag().LinkTo<AddIssueController>(c => c.Index(Model.ID), "View Completed").AsButton(Icon.Check))
	@(Html.Tag().LinkTo<AddIssueController>(c => c.Index(Model.ID), "Add New Issues").AsButton(Icon.CirclePlus))
</p>
